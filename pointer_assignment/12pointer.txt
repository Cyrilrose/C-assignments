12. How is malloc() function different from calloc() function?

->Malloc and Calloc both are memory allocation function used in C for dynamic memory allocation. 
These two have different function and declaration type.
	Firstly, malloc is memory allocation function used in allocating the block of memory. 
It reserves a block of memory of specified size and returns a pointer of type void. 
This means that we can assign it to any type of the pointer. 

Its declaration syntax is:

		ptr=(data_type*) malloc(size_of_block);
	
But Calloc is another memory allocation function that is normally used for requesting memory 
space at run time for storing derived data types such as arrays and structures. While malloc
 allocates single block of storage, calloc allocates multiple blocks of storage, each of the 
same size, and then sets all bytes to zero.

Its declaration syntax is:

	ptr=(data_type*)calloc(no_of_blocks,size_of_each_block);


Difference between malloc( ) and calloc( ) can be more clarified by the help of following example


a.	Malloc: 

#include <stdio.h>
#include <stdlib.h>
int main(){
    int n,i,*ptr,sum=0;
    printf("Enter number of elements: ");
    scanf("%d",&n);
    ptr=(int*)malloc(n*sizeof(int));  //memory allocated using malloc
    if(ptr==NULL)                     
    {
        printf("Error! memory not allocated.");
        exit(0);
    }
    printf("Enter elements of array: ");
    for(i=0;i<n;++i)
    {
        scanf("%d",ptr+i);
        sum+=*(ptr+i);
    }
    printf("Sum=%d",sum);
    free(ptr); 							
    return 0;
}

b. Calloc:


#include <stdio.h>
#include <stdlib.h>
int main(){
    int n,i,*ptr,sum=0;
    printf("Enter number of elements: ");
    scanf("%d",&n);
    ptr=(int*)calloc(n,sizeof(int));
    if(ptr==NULL)
    {
        printf("Error! memory not allocated.");
        exit(0);
    }
    printf("Enter elements of array: ");
    for(i=0;i<n;++i)
    {
        scanf("%d",ptr+i);
        sum+=*(ptr+i);
    }
    printf("Sum=%d",sum);					
    free(ptr);
    return 0;
}	
